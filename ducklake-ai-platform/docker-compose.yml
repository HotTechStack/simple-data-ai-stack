# docker-compose.yml - Complete DuckLake Sandbox
version: '3.8'

services:
  # PostgreSQL - The metadata brain
  postgres:
    image: postgres:14
    container_name: ducklake_postgres
    environment:
      POSTGRES_DB: ducklake_catalog
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ducklake123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - lakehouse
    restart: unless-stopped

  # MinIO - Local S3-compatible storage  
  minio:
    image: minio/minio:latest
    container_name: ducklake_minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - lakehouse
    command: server /data --console-address ":9001"
    restart: unless-stopped

  # MinIO Client - Auto-create buckets
  minio-setup:
    image: minio/mc:latest
    container_name: ducklake_minio_setup
    depends_on:
      - minio
    networks:
      - lakehouse
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/ducklake --ignore-existing;
      /usr/bin/mc policy set public myminio/ducklake;
      echo 'MinIO setup complete';
      "

  # Marimo - Python notebooks that actually work
  marimo:
    build:
      context: .
      dockerfile: Dockerfile.marimo
    container_name: ducklake_marimo
    ports:
      - "2718:2718"
    volumes:
      - ./notebooks:/app/notebooks
      - ./data:/app/data
      - ./requirements.txt:/app/requirements.txt
    networks:
      - lakehouse
    depends_on:
      - postgres
      - minio
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=ducklake_catalog
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=ducklake123
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_ENDPOINT_URL=http://minio:9000
    restart: unless-stopped
    command: marimo edit --host 0.0.0.0 --port 2718 --no-token notebooks/

volumes:
  postgres_data:
  minio_data:

networks:
  lakehouse:
    driver: bridge
