version: '3.8'

services:
  # Postgres Database
  postgres:
    image: postgres:15
    container_name: postgres-tickets
    environment:
      POSTGRES_DB: tickets
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U demo -d tickets"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Cron Container
  cron-demo:
    build:
      context: .
      dockerfile: Dockerfile.cron
    container_name: cron-container
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    volumes:
      - ./core:/app/core
      - ./cron:/app/cron
      - cron_logs:/var/log

  # Airflow
  airflow-webserver:
    image: apache/airflow:2.7.0-python3.11
    container_name: airflow-webserver
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://demo:demo@postgres/tickets
      - AIRFLOW__CORE__FERNET_KEY=YlCImzjge_TeZc4RHSRHPVXphRPQGsluEUhz-WRUmBM=
      - AIRFLOW__WEBSERVER__DEFAULT_USER_USERNAME=admin
      - AIRFLOW__WEBSERVER__DEFAULT_USER_PASSWORD=admin
      - AIRFLOW__WEBSERVER__DEFAULT_USER_EMAIL=admin@example.com
      - AIRFLOW__WEBSERVER__DEFAULT_USER_FIRSTNAME=Admin
      - AIRFLOW__WEBSERVER__DEFAULT_USER_LASTNAME=User
    env_file: .env
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./core:/opt/airflow/core
      - airflow_logs:/opt/airflow/logs
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com &&
        airflow webserver
      "

  # Prefect
  prefect-server:
    image: prefecthq/prefect:2.14-python3.11
    container_name: prefect-server
    ports:
      - "4200:4200"
    environment:
      - PREFECT_UI_URL=http://localhost:4200/api
      - PREFECT_API_URL=http://localhost:4200/api
      - PREFECT_SERVER_API_HOST=0.0.0.0
    command: prefect server start --host 0.0.0.0

  prefect-agent:
    image: prefecthq/prefect:2.14-python3.11
    container_name: prefect-agent
    depends_on:
      - prefect-server
      - postgres
    env_file: .env
    environment:
      - PREFECT_API_URL=http://prefect-server:4200/api
    volumes:
      - ./prefect:/app/prefect
      - ./core:/app/core
    working_dir: /app/prefect
    command: >
      bash -c "
        pip install psycopg2-binary requests openai &&
        python ticket_flow.py
      "

  # Dagster
  dagster:
    image: dagster/dagster-celery-docker:1.5.0
    container_name: dagster-webserver
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    ports:
      - "3000:3000"
    volumes:
      - ./dagster:/opt/dagster/app/dagster
      - ./core:/opt/dagster/app/core
    environment:
      - DAGSTER_CURRENT_IMAGE=dagster/dagster-celery-docker:1.5.0
    command: >
      bash -c "
        pip install psycopg2-binary requests openai &&
        dagster-webserver -h 0.0.0.0 -p 3000 -w /opt/dagster/app/dagster/ticket_assets.py
      "

  # Temporal
  temporal:
    image: temporalio/auto-setup:1.22.0
    container_name: temporal-server
    ports:
      - "7233:7233"
      - "8088:8088"
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=demo
      - POSTGRES_PWD=demo
      - POSTGRES_SEEDS=postgres
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    depends_on:
      postgres:
        condition: service_healthy

  temporal-worker:
    build:
      context: .
      dockerfile: Dockerfile.temporal
    container_name: temporal-worker
    depends_on:
      - temporal
      - postgres
    env_file: .env
    volumes:
      - ./temporal:/app/temporal
      - ./core:/app/core

  # Flyte
  flyte-sandbox:
    image: cr.flyte.org/flyteorg/flyte-sandbox:latest
    container_name: flyte-sandbox
    ports:
      - "8089:8089"
      - "8088:8088"
    volumes:
      - ./flyte:/app/flyte
      - ./core:/app/core
    env_file: .env

volumes:
  postgres_data:
  airflow_logs:
  cron_logs:
